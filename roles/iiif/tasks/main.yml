---
# tasks file for iiif
- name: iiif | create a working directory for serverless
  ansible.builtin.file:
    path: "{{ serverless_path }}"
    state: directory
    mode: 0755

- name: iiif | install sam and awscli
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - awscli
    - aws-sam-cli  # will this get the tap'ed repo

- name: iiif | add clone repo
  ansible.builtin.git:
    repo: "https://github.com/samvera-labs/serverless-iiif.git"
    dest: "{{ serverless_path }}/serverless-iiif"
    force: true

- name: iiif | create a serverless edge path
  ansible.builtin.file:
    path: "{{ serverless_path }}/serverless-iiif/src_edge"
    state: directory
    mode: 0755

- name: iiif | add headers
  ansible.builtin.copy:
    src: "{{ item.name }}"
    dest: "{{ serverless_path }}/serverless-iiif/src/{{ item.dest }}"
    mode: 0644
  loop:
    - { name: 'helpers.js', dest: 'helpers.js' }
    - { name: 'index.js', dest: 'index.js' }

- name: iiif | add headers edge
  ansible.builtin.copy:
    src: "{{ item.name }}"
    dest: "{{ serverless_path }}/serverless-iiif/{{ item.dest }}"
    mode: 0644
  loop:
    - { name: 'edge_index.js', dest: 'index.js' }
    - { name: 'package.json', dest: 'package.json'}

- name: iiif | and template file
  ansible.builtin.copy:
    src: "{{ item.name }}"
    dest: "{{ serverless_path }}/serverless-iiif/src_edge/{{ item.dest }}"
    mode: 0644
  loop:
    - { name: 'template.yml', dest: 'template.yml' }

- name: iiif | ensure existence of S3 bucket
  amazon.aws.aws_s3:
    aws_access_key: "{{ project_user_aws_access_key }}"
    aws_secret_key: "{{ project_user_aws_secret_key }}"
    region: "{{ aws_region }}"
    bucket: "{{ item }}"
    mode: create
  loop:
    - "pul-cloud-{{ runtime_env | default('staging') }}"
    - "pul-image-{{ runtime_env | default('staging') }}"

- name: iiif | build container
  ansible.builtin.command: sam build --use-container
  environment: 
    AWS_REGION: "{{ aws_region }}"
    AWS_ACCESS_KEY_ID: "{{ project_user_aws_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ project_user_aws_secret_key }}"
  args:
    chdir: "{{ lambda_dir }}"
  changed_when: false

- name: iiif | deploy lambda
  ansible.builtin.command: sam deploy --stack-name=pul-cloud-{{ runtime_env | default('staging') }} --s3-prefix=pul-cloud-{{ runtime_env | default('staging') }} --parameter-overrides=StageName={{ runtime_env | default('staging')}} SourceBucket=pul-image-{{ runtime_env | default('staging') }} CacheDomainName=pul-cloud-{{ runtime_env | default('staging') }}.princeton.edu --s3-bucket=aws-sam-cli-managed-default-samclisourcebucket-1j1ve93v4jqs9 --region={{ aws_region }} --capabilities=CAPABILITY_IAM CAPABILITY_AUTO_EXPAND --profile=iiifcloud --no-confirm-changeset
  environment: 
    AWS_REGION: "{{ aws_region }}"
    AWS_ACCESS_KEY_ID: "{{ project_user_aws_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ project_user_aws_secret_key }}"
  args:
    chdir: "{{ lambda_dir }}"
  changed_when: false
  ignore_errors: true
