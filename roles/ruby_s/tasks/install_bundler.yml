---
- name: ruby_s | uninstall wrong version of bundler
  ansible.builtin.command: gem uninstall bundler
  register: bundler_uninstall
  when: running_on_server

- name: what does bundler_uninstall look like?
  debug:
    var: bundler_uninstall

- name: what version of bundler do we want?
  debug:
    var: bundler_version

- name: ruby_s | get gem home
  ansible.builtin.shell: gem env home
  register: bundler_home
  when:
    - running_on_server
    - (bundler_uninstall.stdout is search("default gem"))

- name: ruby_s | remove installed bundler if default
  ansible.builtin.file:
    path: '{{ bundler_home.stdout }}/specifications/default/bundler-{{ installed_bundler.stdout }}.gemspec'
    state: absent
  when:
    - running_on_server
    - (bundler_uninstall.stdout is search("default gem"))

- name: ruby_s | install global bundler for ruby2.x on Jammy
  ansible.builtin.shell: export PATH="{{ install_path }}/{{ openssl_version }}:$PATH" && gem install bundler -v {{ bundler_version }}
  when:
    - running_on_server
    - bundler_version is defined
    - ruby_version == "ruby-2.7.5"
    - ansible_facts['distribution'] == "Ubuntu"
    - ansible_facts['distribution_major_version'] == "22"
  register: new_bundler

- name: ruby_s | install global bundler, specific version
  ansible.builtin.command: gem install bundler -v {{ bundler_version }}
  when:
    - running_on_server
    - bundler_version is defined
    - (ruby_version != "ruby-2.7.5") or (ansible_facts['distribution_major_version'] != "22")
  register: new_bundler

- name: what happened in the install bundler task?
  debug:
    var: new_bundler

- name: and what version of bundler do we have now?
  shell: "bundler --version"
  register: fresh_bundler

- name: what fresh bundler is this?
  debug:
    var: fresh_bundler

- name: ruby_s | install global bundler, any version
  ansible.builtin.command: gem install bundler
  when: bundler_version is undefined

- name: ruby_s | update rubygems
  ansible.builtin.command: gem update --system
  become: true
  when: running_on_server
# the running_on_server is in here because switching bundler versions is only likely to happen on a server
